diff --git a/putty.h b/putty.h
index 9580c3cd..24ea133b 100644
--- a/putty.h
+++ b/putty.h
@@ -139,6 +139,28 @@ typedef struct terminal_tag Terminal;
 #define ATTR_DEFBG   (258 << ATTR_BGSHIFT)
 #define ATTR_DEFAULT (ATTR_DEFFG | ATTR_DEFBG)
 
+#define CHAR_MASK    0x000000FFUL
+
+enum {
+    URLHACK_UNDERLINE_ALWAYS,
+    URLHACK_UNDERLINE_HOVER,
+    URLHACK_UNDERLINE_NEVER
+};
+
+enum {
+    URLHACK_REGEX_CUSTOM = 0,
+    URLHACK_REGEX_CLASSIC = 1,
+    URLHACK_REGEX_LIBERAL,
+};
+
+/*
+ * HACK: PuttyTray
+ * Tray options
+ */
+enum {
+    TRAY_NEVER, TRAY_NORMAL, TRAY_START, TRAY_ALWAYS
+};
+
 struct sesslist {
     int nsessions;
     char **sessions;
@@ -310,7 +332,9 @@ enum {
     PROT_RAW, PROT_TELNET, PROT_RLOGIN, PROT_SSH,
     /* PROT_SERIAL is supported on a subset of platforms, but it doesn't
      * hurt to define it globally. */
-    PROT_SERIAL
+    PROT_SERIAL,
+    PROT_CYGTERM,
+    PROT_ADB
 };
 
 enum {
@@ -325,7 +349,7 @@ enum {
 
 enum {
     /* Resize actions (CONF_resize_action) */
-    RESIZE_TERM, RESIZE_DISABLED, RESIZE_FONT, RESIZE_EITHER
+    RESIZE_TERM, RESIZE_DISABLED, RESIZE_FONT, RESIZE_EITHER, RESIZE_MAXTERM
 };
 
 enum {
@@ -335,7 +359,8 @@ enum {
     FUNKY_XTERM,
     FUNKY_VT400,
     FUNKY_VT100P,
-    FUNKY_SCO
+    FUNKY_SCO,
+    FUNKY_4690 /* LC: function key type for 4690 OS telnet & ssh */ 
 };
 
 enum {
@@ -586,7 +611,7 @@ void free_ctx(Context);
 void palette_set(void *frontend, int, int, int, int);
 void palette_reset(void *frontend);
 void write_aclip(void *frontend, char *, int, int);
-void write_clip(void *frontend, wchar_t *, int *, int, int);
+void write_clip(Terminal *term, void *frontend, wchar_t *, int *, int, int);
 void get_clip(void *frontend, wchar_t **, int *);
 void optimised_move(void *frontend, int, int, int);
 void set_raw_mouse_mode(void *frontend, int);
@@ -721,6 +746,10 @@ void cleanup_exit(int);
     X(INT, NONE, serstopbits) \
     X(INT, NONE, serparity) \
     X(INT, NONE, serflow) \
+    /* Cygterm options */ \
+    X(INT, NONE, cygautopath) \
+    X(INT, NONE, cygterm64) \
+    X(STR, NONE, cygcmd) \
     /* Keyboard options */ \
     X(INT, NONE, bksp_is_delete) \
     X(INT, NONE, rxvt_homeend) \
@@ -742,6 +771,7 @@ void cleanup_exit(int);
     X(INT, NONE, alt_f4) /* is it special? */ \
     X(INT, NONE, alt_space) /* is it special? */ \
     X(INT, NONE, alt_only) /* is it special? */ \
+    X(INT, NONE, alt_metabit) /* set meta instead of escape */ \
     X(INT, NONE, localecho) \
     X(INT, NONE, localedit) \
     X(INT, NONE, alwaysontop) \
@@ -751,9 +781,12 @@ void cleanup_exit(int);
     X(INT, NONE, erase_to_scrollback) \
     X(INT, NONE, compose_key) \
     X(INT, NONE, ctrlaltkeys) \
+    X(INT, NONE, rightaltkey) /* Taken from gdi-20120130 */ \
     X(STR, NONE, wintitle) /* initial window title */ \
     /* Terminal options */ \
     X(INT, NONE, savelines) \
+    X(INT, NONE, pastedelay) \
+    X(INT, NONE, scrolllines) \
     X(INT, NONE, dec_om) \
     X(INT, NONE, wrap_mode) \
     X(INT, NONE, lfhascr) \
@@ -802,6 +835,7 @@ void cleanup_exit(int);
     X(INT, NONE, rawcnp) \
     X(INT, NONE, rtf_paste) \
     X(INT, NONE, mouse_override) \
+    X(INT, NONE, copy_clipbd_url_reg) /* url-cut */ \
     X(INT, INT, wordness) \
     /* translations */ \
     X(INT, NONE, vtmode) \
@@ -868,6 +902,19 @@ void cleanup_exit(int);
     X(INT, NONE, shadowboldoffset) \
     X(INT, NONE, crhaslf) \
     X(STR, NONE, winclass) \
+    X(INT, NONE, transparency) \
+    X(INT, NONE, failure_reconnect) \
+    X(INT, NONE, wakeup_reconnect) \
+    X(INT, NONE, tray) \
+    X(INT, NONE, start_tray) \
+    X(INT, NONE, tray_restore) \
+    X(FILENAME, NONE, win_icon) \
+    X(INT, NONE, url_ctrl_click) \
+    X(INT, NONE, url_underline) \
+    X(INT, NONE, url_defbrowser) \
+    X(INT, NONE, url_defregex) \
+    X(FILENAME, NONE, url_browser) \
+    X(STR, NONE, url_regex) \
 
 /* Now define the actual enum of option keywords using that macro. */
 #define CONF_ENUM_DEF(valtype, keytype, keyword) CONF_ ## keyword,
@@ -909,7 +956,7 @@ void conf_set_fontspec(Conf *conf, int key, const FontSpec *val);
 /* Serialisation functions for Duplicate Session */
 int conf_serialised_size(Conf *conf);
 void conf_serialise(Conf *conf, void *data);
-int conf_deserialise(Conf *conf, void *data, int maxsize);/*returns size used*/
+size_t conf_deserialise(Conf *conf, void *data, size_t maxsize);/*returns size used*/
 
 /*
  * Functions to copy, free, serialise and deserialise FontSpecs.
@@ -935,6 +982,8 @@ void noise_ultralight(unsigned long data);
 void random_save_seed(void);
 void random_destroy_seed(void);
 
+enum storage_t;
+
 /*
  * Exports from settings.c.
  */
@@ -950,6 +999,15 @@ void do_defaults(char *, Conf *);
 void registry_cleanup(void);
 
 /*
+ * HACK: PuttyTray / PuTTY File
+ * Quick hack to load defaults from file
+ */
+void do_defaults_file(char *, Conf *);
+void do_defaults_then_file(char *, Conf *);
+void do_defaults_after_detection(char *session, Conf *conf);
+void load_settings_file(char *section, Conf * cfg);
+
+/*
  * Functions used by settings.c to provide platform-specific
  * default settings.
  * 
@@ -1046,6 +1104,12 @@ extern Backend loop_backend;
 extern Backend raw_backend;
 
 /*
+ * Exports from adb.c.
+ */
+
+extern Backend adb_backend;
+
+/*
  * Exports from rlogin.c.
  */
 
@@ -1063,6 +1127,12 @@ extern Backend telnet_backend;
 extern Backend ssh_backend;
 
 /*
+ * Exports from cygterm.c.
+ */
+extern Backend cygterm_backend;
+void cygterm_setup_config_box(struct controlbox *b, int midsession);
+
+/*
  * Exports from ldisc.c.
  */
 void *ldisc_create(Conf *, Terminal *, Backend *, void *, void *);
@@ -1107,6 +1177,11 @@ int conf_launchable(Conf *conf);
 char const *conf_dest(Conf *conf);
 
 /*
+ * Exports from *misc.c.
+ */
+void sanitise_path_leaving_slashes(Filename *original, char *path);
+
+/*
  * Exports from sercfg.c.
  */
 void ser_setup_config_box(struct controlbox *b, int midsession,
@@ -1445,10 +1520,18 @@ void request_callback_notifications(toplevel_callback_notify_fn_t notify,
 #endif
 
 /* SURROGATE PAIR */
+#ifndef HIGH_SURROGATE_START
 #define HIGH_SURROGATE_START 0xd800
+#endif
+#ifndef HIGH_SURROGATE_END
 #define HIGH_SURROGATE_END 0xdbff
+#endif
+#ifndef LOW_SURROGATE_START
 #define LOW_SURROGATE_START 0xdc00
+#endif
+#ifndef LOW_SURROGATE_END
 #define LOW_SURROGATE_END 0xdfff
+#endif
 
 /* These macros exist in the Windows API, so the environment may
  * provide them. If not, define them in terms of the above. */
